// import React, { useCallback, useContext, useEffect, useState } from "react";
// import {
//   Modal,
//   ModalOverlay,
//   ModalContent,
//   ModalHeader,
//   ModalFooter,
//   ModalBody,
//   ModalCloseButton,
//   Button,
//   Box,
//   Avatar,
//   Input,
//   Text,
// } from "@chakra-ui/react";
// import { FaImages } from "react-icons/fa";
// import Dropzone from "react-dropzone";
// import { IAuthContext } from "../interfaces/IAuthContext";
// import { AuthContext } from "../context/AuthContext";

// interface PostModalProps {
//   isOpen: boolean;
//   onClose: () => void;
//   uploadPost:(caption:string,photo:string)=>void;
// }

// export const PostModal = ({uploadPost, isOpen, onClose }: PostModalProps) => {
//   const{user}=useContext<IAuthContext>(AuthContext)
//   const [url, setUrl] = useState<string>("");
//   const [file, setFile] = useState<any>();
//   const [caption, setCaption] = useState<string>("");
//   const [loading, setLoading] = useState<boolean>(false);

//   const onDrop = useCallback((acceptedFiles: any) => {
//     acceptedFiles.forEach((file: any) => {
//       const reader = new FileReader();

//       reader.onabort = () => console.log("file reading was aborted");
//       reader.onerror = () => console.log("file reading has failed");
//       reader.onload = () => {
//         // Do whatever you want with the file contents
//         const binaryStr = reader.result;
//         // console.log(binaryStr)
//       };
//       reader.readAsArrayBuffer(file);
//     });
//   }, []);

//   //  post functionality
//   const postData = async () => {
//     setLoading(true);
//     const data = new FormData();
//     data.append("file", file[0]);
//     data.append("upload_preset", "tzo42pxi");
//     data.append("cloud_name", "dwtpwuwax");
//     fetch("https://api.cloudinary.com/v1_1/dwtpwuwax/image/upload", {
//       method: "post",
//       body: data,
//     })
//       .then((res) => res.json())
//       .then((data) => {
//         setUrl(data.url);
//         setLoading(false);
//       })
//       .catch((err) => {
//         console.log(err);
//       });
//   };

//   useEffect(() => {
//     postData();
//   }, [file]);

//   return (
//     <Modal isOpen={isOpen} onClose={onClose}>
//       <ModalOverlay />
//       <ModalContent>
//         <ModalHeader>Upload</ModalHeader>

//         <ModalCloseButton />
//         <ModalBody>
//           <Box display="flex" alignItems="center">
//             <Avatar src={user.user.pic} name="kaushik" mr="12px" />
//             <Input
//               placeholder="What's on your mind?"
//               onChange={(e: React.FormEvent<HTMLInputElement>) =>
//                 setCaption(e.currentTarget.value)
//               }
//               value={caption}
//             />
//           </Box>

//           <Dropzone onDrop={(acceptedFiles) => setFile(acceptedFiles)}>
//             {({ getRootProps, getInputProps }) => (
//               <Box
//                 {...getRootProps()}
//                 mt="15px"
//                 border="1px dashed grey"
//                 width="full"
//                 height="300px"
//                 borderRadius="5px"
//                 display="grid"
//                 placeContent="center"
//                 cursor="pointer"
//               >
//                 <Box>
//                   <FaImages
//                     color="grey"
//                     style={{ margin: "auto", fontSize: 40 }}
//                   />
//                   <input {...getInputProps()} />
//                   <Text cursor="pointer" color="grey">
//                     {file
//                       ? file[0].name
//                       : "   Drag a file here or click to select files"}
//                   </Text>
//                 </Box>
//               </Box>
//             )}
//           </Dropzone>
//         </ModalBody>

//         <ModalFooter>
//           <Button colorScheme="red" variant="outline" mr={3} onClick={onClose}>
//             Close
//           </Button>
//           <Button
//             disabled={!url}
//             onClick={() => uploadPost(url, caption)}
//             colorScheme="green"
//             variant="outline"
//           >
//             {loading ? "Uploading...." : "Post"}
//           </Button>
//         </ModalFooter>
//       </ModalContent>
//     </Modal>
//   );
// };
